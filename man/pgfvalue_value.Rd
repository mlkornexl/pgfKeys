% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pgfvalue_keyvalue.R
\name{pgfvalue_value}
\alias{pgfvalue_value}
\alias{pgfvalue_value.character}
\alias{pgfvalue_value.pgfvalue_value}
\alias{pgfvalue_value.logical}
\alias{pgfvalue_value.integer}
\alias{pgfvalue_value.numeric}
\alias{pgfvalue_value.Date}
\alias{pgfvalue_value.POSIXt}
\alias{pgfvalue_key}
\title{Parsing Values for PGF Key-Value Pairs}
\usage{
pgfvalue_value(value, mask = FALSE, ...)

\method{pgfvalue_value}{character}(value, mask = FALSE, na = NA_character_,
  newlines = FALSE, spaces = FALSE, ...)

\method{pgfvalue_value}{pgfvalue_value}(value, mask = FALSE, ...)

\method{pgfvalue_value}{logical}(value, mask = FALSE, na = NA_character_,
  ...)

\method{pgfvalue_value}{integer}(value, mask = FALSE, na = NA_character_,
  ...)

\method{pgfvalue_value}{numeric}(value, mask = FALSE, na = NA_character_,
  ...)

\method{pgfvalue_value}{Date}(value, mask = FALSE, na = NA_character_, ...)

\method{pgfvalue_value}{POSIXt}(value, mask = FALSE, na = NA_character_,
  time = FALSE, ...)

pgfvalue_key(key)
}
\arguments{
\item{value}{value to be parsed, see methods for available classes}

\item{mask}{if \code{TRUE} and value contains \code{"="} or \code{","},
\code{value} is masked by curly brackest \code{{...}}}

\item{...}{additional parameter passed to S3 methods}

\item{na}{character, replacement value for \code{NA} characters}

\item{newlines}{boolean, controls escaping of \emph{single} new line characters,
see details}

\item{spaces}{boolean, controls behaviour of multiple white spaces, see
details}

\item{time}{boolean, controls return of time part}

\item{key}{character string, if of length greater one, only first entry
will be used}
}
\value{
an object of class \code{pgfvalue_value}; The initial class of
    \code{value} will be, if it does not already contain
    \code{pgfvalue_value} expanded by \code{pgfvalue_value}.

Return values that contain equal signs, colons, or new line
    characters can be masked with curly brackets if \code{mask = TRUE}.
    If \code{mask = TRUE} and return value \emph{is already} masked, not
    additional braces will be added. If \code{mask = TRUE} and return value
    \emph{does not} contain special characters, masking braces will be
    removed.
    
    For \code{value} of type \code{pgfvalue_value} and \code{mask = FALSE},
    the return value will remain unchanged.

Numeric values will be returned in "fixed point" decimal notation
    with decimal mark being a dot.

Date values are returned in ISO 8601 format, see \code{\%F}
    formatting string  in \code{\link[base]{strptime}}.

Date time values are returned as date values only if
    \code{time = FALSE} (the default). Otherwise, format will be
    \emph{\code{YYYY-MM-DDThh:mm:ss}}, see \code{\%F} and \code{\%X}
    formatting string in \code{\link[base]{strptime}}.

Function \code{pgfvalue_key} returns a valid name of the key as an
    object of class \code{pgfvalue_key}. If a path name is included in
    \code{key}, see details, it is set as attribute \code{path}.
}
\description{
The function parses values and key names to be used with PGF key-value
pairs by escaping LaTeX special characters, masking output with braces, or
checking valid input.
}
\details{
Special characters in character vectors \code{value} will be
    escaped:
    \enumerate{
        \item backslashes (\code{\\}) are replaced by \code{\\textbackslash}
        \item special characters (\code{#}, \code{$}, \code{\%}, \code{&},
            \code{_}, \code{\{}, \code{\}}) are escaped by prepending a
            backslash
        \item \code{\\textbackslash} is appended a pair of curly brackets
        \item tilde (\code{~}) and circumflex (\code{^}) are replaced by
            their LaTeX variants \code{\\textasciitilde} and
            \code{\\textasciicircum}
        \item carriage returns are replaced by a new line character
        \item any white spaces are replace by a single space
        \item any leading or trailing spaces will be removed
    }
    
    If \code{spaces = TRUE} any multiple spaces are escaped to
    \emph{protected} LaTeX spaces (or "control" spaces).
    
    If \code{newlines = TRUE} any \emph{single} line break will be replaces by
    a LaTeX linebreak (\code{\\}).

Key names may contain any alpha-numeric characters as well as
    white spaces (leading and trailing ones will be omitted) and special
    characters \code{.}, \code{_}, \code{$}, or \code{/}. The latter two
    are used as path separators. Any part of \code{key} \emph{before} the
    last \code{/} or \code{$} is used as path.
}
